#!/usr/bin/env python3
import os.path
import os
import sipconfig

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = "config.sbf"

# Get the SIP configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.
os.system(" ".join([config.sip_bin, "-c", ".", "-b", build_file, "selector-bindings.sip"]))

# Create the Makefile.
# Installation path is within the project, not central (DEST_DIR won't work correctly)
makefile = sipconfig.SIPModuleMakefile(config, build_file, install_dir=os.path.abspath("../../../bin/selector-bindings"))

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the "lib" prefix on UNIX, or the
# ".dll" extension on Windows).
makefile.extra_libs = ["z"]

extra_bin_dirs = [
    os.path.abspath("../../../bin/selector"),
    os.path.abspath("../../../bin/kenlm/util"),
    os.path.abspath("../../../bin/kenlm/lm")
]

makefile.extra_include_dirs = [os.path.abspath("../../cpp/ARPA-selector"), os.path.abspath("../../../libs/kenlm")]
makefile.extra_lflags = [" ".join([os.path.join(bin, "*.o") for bin in extra_bin_dirs])]


# Generate the Makefile itself.
makefile.generate()
