/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.12.4 on Wed Dec 14 00:36:35 2011
 */

#include "sipAPIcontainer.h"




/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_FooContainer(void *, const sipTypeDef *);}
static void *cast_FooContainer(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_FooContainer)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_FooContainer(void *, int);}
static void release_FooContainer(void *sipCppV,int)
{
    delete reinterpret_cast<FooContainer *>(sipCppV);
}


extern "C" {static void assign_FooContainer(void *, SIP_SSIZE_T, const void *);}
static void assign_FooContainer(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<FooContainer *>(sipDst)[sipDstIdx] = *reinterpret_cast<const FooContainer *>(sipSrc);
}


extern "C" {static void *array_FooContainer(SIP_SSIZE_T);}
static void *array_FooContainer(SIP_SSIZE_T sipNrElem)
{
    return new FooContainer[sipNrElem];
}


extern "C" {static void *copy_FooContainer(const void *, SIP_SSIZE_T);}
static void *copy_FooContainer(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new FooContainer(reinterpret_cast<const FooContainer *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_FooContainer(sipSimpleWrapper *);}
static void dealloc_FooContainer(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_FooContainer(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_FooContainer(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_FooContainer(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    FooContainer *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new FooContainer();

            return sipCpp;
        }
    }

    {
        const FooContainer * a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_FooContainer, &a0))
        {
            sipCpp = new FooContainer(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


extern "C" {static PyObject *varget_FooContainer_members(void *, PyObject *);}
static PyObject *varget_FooContainer_members(void *sipSelf, PyObject *)
{
    int sipVal;
    FooContainer *sipCpp = reinterpret_cast<FooContainer *>(sipSelf);

    sipVal = sipCpp->members;

    return SIPLong_FromLong(sipVal);
}


extern "C" {static int varset_FooContainer_members(void *, PyObject *, PyObject *);}
static int varset_FooContainer_members(void *sipSelf, PyObject *sipPy, PyObject *)
{
    int sipVal;
    FooContainer *sipCpp = reinterpret_cast<FooContainer *>(sipSelf);

    sipVal = (int)SIPLong_AsLong(sipPy);

    if (PyErr_Occurred() != NULL)
        return -1;

    sipCpp->members = sipVal;

    return 0;
}

sipVariableDef variables_FooContainer[] = {
    {InstanceVariable, sipName_members, (PyMethodDef *)varget_FooContainer_members, (PyMethodDef *)varset_FooContainer_members, NULL, NULL},
};


sipClassTypeDef sipTypeDef_container_FooContainer = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_FooContainer,
        {0}
    },
    {
        sipNameNr_FooContainer,
        {0, 0, 1},
        0, 0,
        0, 0,
        1, variables_FooContainer,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    0,
    0,
    init_FooContainer,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_FooContainer,
    assign_FooContainer,
    array_FooContainer,
    copy_FooContainer,
    release_FooContainer,
    cast_FooContainer,
    0,
    0,
    0
};
